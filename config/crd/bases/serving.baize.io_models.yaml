---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: models.serving.baize.io
spec:
  group: serving.baize.io
  names:
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.share
      name: share
      type: string
    - jsonPath: .spec.format
      name: format
      type: string
    - jsonPath: .spec.latestVersion
      name: latestVersion
      type: string
    - jsonPath: .status.phase
      name: phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Model is the Schema for the models API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelSpec defines the desired state of Model
            properties:
              architecture:
                description: |-
                  Architecture specifies the structural design of the model.
                  It describes the arrangement of layers and nodes in the neural network and how they are connected.
                  Common values include 'CNN' for Convolutional Neural Networks,
                  'RNN' for Recurrent Neural Networks,
                  'LSTM' for Long Short-Term Memory networks,
                  'Transformer' for models based on the transformer architecture, etc.
                  This field helps in understanding the type of model and the kind of tasks it is suitable for,
                  such as image processing, sequence modeling, or language understanding.
                enum:
                - CNN
                - RNN
                - LSTM
                - TRANSFORMER
                - MLP
                - BERT
                - GAN
                - RESNET
                - OTHER
                type: string
              displayName:
                description: |-
                  DisplayName is the human-readable name of the model.
                  Can contain any characters, including spaces, dots, and hyphens.
                type: string
              format:
                description: |-
                  The model files format.
                  One of Pytorch, ONNX, Tensorflow
                enum:
                - PYTORCH
                - TENSORFLOW
                - ONNX
                type: string
              iconURL:
                description: |-
                  IconURL provides a URL to an icon representing the model, which can be used in UIs.
                  Url or base64 string
                type: string
              inputConfig:
                description: |-
                  InputConfig is the input config for serving.
                  Maybe triton input config
                type: string
              isLLM:
                description: IsLLM indicates whether the model is a Large Language
                  Model.
                type: boolean
              latestVersion:
                description: LatestVersion is used to indicate which version of the
                  model should be used.
                type: string
              license:
                description: |-
                  License specifies the license under which the model is released, e.g., "MIT", "Apache 2.0", "GPLv3".
                  It can also be the contents of the entire License file.
                type: string
              outputConfig:
                description: Same as InputConfig, but for output.
                type: string
              readme:
                description: Readme of this model, support markdown syntax.
                type: string
              share:
                description: |-
                  Share indicates whether the model is shareable with others.
                  When set to true, the model can be shared according to the specified selector.
                type: boolean
              shareToNamespaceSelector:
                description: |-
                  ShareToNamespaceSelector defines a label selector to specify the namespaces
                  to which the model can be shared. Only namespaces that match the selector will have access to the model.
                  If Share is true and ShareToNamespaceSelector is empty, that means all namespaces can access this.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              tags:
                description: Tags are a list of strings that can be used to tag or
                  categorize the model.
                items:
                  type: string
                type: array
              versions:
                items:
                  properties:
                    creationTimestamp:
                      format: date-time
                      type: string
                    source:
                      description: Model files source options
                      properties:
                        datasetRef:
                          properties:
                            dataset:
                              description: Dataset name.
                              type: string
                            namespace:
                              type: string
                            path:
                              type: string
                          type: object
                        type:
                          description: source type, eg Dataset
                          type: string
                      type: object
                    version:
                      description: The version name
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: ModelStatus defines the observed state of Model
            properties:
              phase:
                default: PENDING
                enum:
                - PENDING
                - CREATING
                - READY
                - ERROR
                type: string
              versions:
                items:
                  properties:
                    dataset:
                      type: string
                    path:
                      type: string
                    phase:
                      default: PENDING
                      enum:
                      - PENDING
                      - CREATING
                      - READY
                      - ERROR
                      type: string
                    pvcName:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
